<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

<ee:object-store-caching-strategy name="Caching_AvO_Users_count" keyGenerationExpression="#[flowVars.'timerange-clausule']" doc:name="Caching Strategy">
        <managed-store storeName="avo_users_count" maxEntries="1" entryTTL="-1" expirationInterval="600000"/>
    </ee:object-store-caching-strategy>
   
<flow name="AvO">
        <http:listener config-ref="api-httpListenerConfig" path="/avo/users" allowedMethods="GET" doc:name="/api/avo/users"/>
        <logger message="Start /api/avo/users" level="INFO" doc:name="Start /api/avo/users"/>
        <set-variable variableName="format" value="#[message.inboundProperties.'http.query.params'.format == null ? 'JSON' : message.inboundProperties.'http.query.params'.format.toUpperCase() == 'JSON' ? 'JSON' : 'CSV']" doc:name="Set format to JSON or CSV"/>
        <choice doc:name="Timerange available?">
            <when expression="#[message.inboundProperties.'http.query.params'.from != null &amp;&amp; message.inboundProperties.'http.query.params'.until != null]">
                <set-variable variableName="from" value="#[message.inboundProperties.'http.query.params'.from]" doc:name="Set from"/>
                <set-variable variableName="until" value="#[message.inboundProperties.'http.query.params'.until]" doc:name="until"/>
                <set-variable variableName="timerange-clausule" value="#[' AND u.created &gt;= ' + &quot;'&quot; + flowVars.from + &quot;'&quot; + ' AND u.created &lt;= ' + &quot;'&quot; + flowVars.until + &quot;'&quot;]" doc:name="Set timerange-clausule"/>
            </when>
            <when expression="#[message.inboundProperties.'http.query.params'.from == null &amp;&amp; message.inboundProperties.'http.query.params'.until != null]">
                <set-variable variableName="until" value="#[message.inboundProperties.'http.query.params'.until]" doc:name="Only until"/>
                <set-variable variableName="timerange-clausule" value="#[' AND u.created &lt;= ' + &quot;'&quot; + flowVars.until + &quot;'&quot;]" doc:name="Set timerange-clausule"/>
            </when>
            <when expression="#[message.inboundProperties.'http.query.params'.from != null &amp;&amp; message.inboundProperties.'http.query.params'.until == null]">
                <set-variable variableName="from" value="#[message.inboundProperties.'http.query.params'.from]" doc:name="Only from"/>
                <set-variable variableName="timerange-clausule" value="#[' AND u.created &gt;= ' + &quot;'&quot; + flowVars.from + &quot;'&quot;]" doc:name="Set timerange-clausule"/>
            </when>
            <otherwise>
                <set-variable variableName="timerange-clausule" value="#['']" doc:name="Set timerange-clausule empty"/>
            </otherwise>
        </choice>
        <db:select config-ref="MySQL_Configuration" doc:name="AvO: fetch users">
            <db:dynamic-query><![CDATA[SELECT 
    u.uid,
    p.pid,
    u.name naam,
    u.mail 'e-mail',
    u.status active,
    FROM_UNIXTIME(u.created) created,
    FROM_UNIXTIME(u.access) access,
    r.name rol,
    GROUP_CONCAT(rl.field_registratie_leraarkaart_value) lerarenkaart,
    GROUP_CONCAT(td.name
        SEPARATOR ', ') graad,
    GROUP_CONCAT(DISTINCT n.title
        SEPARATOR ', ') school,
    SUBSTRING_INDEX(m.sourceid1, '_', 1) vestigingsnummer
FROM
    users u
        LEFT JOIN
    users_roles ur ON ur.uid = u.uid
    AND u.created >= 1473897600
        JOIN
    role r ON r.rid = ur.rid
        LEFT JOIN
    profile p ON p.uid = u.uid
        LEFT JOIN
    field_data_field_registratie_leraarkaart rl ON rl.entity_id = p.pid
        LEFT JOIN
    field_data_field_leerjaar_ref lr ON lr.entity_id = p.pid
        LEFT JOIN
    taxonomy_term_data td ON td.tid = lr.field_leerjaar_ref_target_id
        LEFT JOIN
    field_data_field_registratie_scholen rs ON rs.entity_id = p.pid
        LEFT JOIN
    field_data_field_scholen fs ON fs.entity_id = p.pid
        LEFT JOIN
    node n ON n.nid = fs.field_scholen_target_id
        LEFT JOIN
    migrate_map_testbeeld_contentonderwijsinstellingen m ON m.destid1 = n.nid
WHERE
    ur.rid = '31' OR ur.rid = '51'
    #[flowVars.'timerange-clausule']
GROUP BY u.uid
order by u.created desc]]></db:dynamic-query>
        </db:select>
        <choice doc:name="Choice">
            <when expression="#[flowVars.format == 'CSV']">
                <dw:transform-message doc:name="To CSV">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/csv
---
payload]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <otherwise>
                <dw:transform-message doc:name="To JSON">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>
       	<logger message="Done /api/avo/users" level="INFO" doc:name="Done"/>
    </flow>
    <flow name="AvO1">
        <http:listener config-ref="api-httpListenerConfig" path="/avo/users/count" allowedMethods="GET" doc:name="/api/avo/users/count"/>
        <logger message="Start /api/avo/users/count" level="INFO" doc:name="Start /api/avo/users/count"/>
        <db:select config-ref="MySQL_Configuration" doc:name="count users per rol">
            <db:dynamic-query><![CDATA[SELECT r.name rol, count(1) aantal
FROM users u
	LEFT JOIN users_roles ur ON ur.uid = u.uid
	JOIN role r ON r.rid = ur.rid
group by r.name
order by r.name]]></db:dynamic-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	(payload map using (rol = $.rol) '$rol': payload[$$].aantal)
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="Done /api/avo/users" level="INFO" doc:name="Done"/>
    </flow>
    <flow name="AvO2">
        <http:listener config-ref="api-httpListenerConfig" path="/avo/users/roles" allowedMethods="GET" doc:name="/api/avo/users/roles"/>
        <logger message="Start /api/avo/users/roles" level="INFO" doc:name="Start /api/avo/users/roles"/>
        <db:select config-ref="MySQL_Configuration" doc:name="AvO: fetch count per role">
            <db:dynamic-query><![CDATA[SELECT max(r.name) rol, count(1) count
FROM users u
        LEFT JOIN
    users_roles ur ON ur.uid = u.uid
        JOIN
    role r ON r.rid = ur.rid
GROUP BY r.name;]]></db:dynamic-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <logger message="Done /api/avo/users" level="INFO" doc:name="Done"/>
    </flow>
    <flow name="AvO3">
        <http:listener config-ref="api-httpListenerConfig" path="/avo/items/count" allowedMethods="GET" doc:name="/api/avo/items/count"/>
        <logger message="Start /api/avo/items/count" level="INFO" doc:name="Start /api/avo/items/count"/>
        <db:select config-ref="MySQL_Configuration" doc:name="AvO: fetch items per type">
            <db:dynamic-query><![CDATA[SELECT 
    u.uid,
    p.pid,
    u.name naam,
    u.mail 'e-mail',
    u.status active,
    FROM_UNIXTIME(u.created) created,
    FROM_UNIXTIME(u.access) access,
    r.name rol,
    GROUP_CONCAT(rl.field_registratie_leraarkaart_value) lerarenkaart,
    GROUP_CONCAT(td.name
        SEPARATOR ', ') graad,
    GROUP_CONCAT(DISTINCT n.title
        SEPARATOR ', ') school,
    SUBSTRING_INDEX(m.sourceid1, '_', 1) vestigingsnummer
FROM
    users u
        LEFT JOIN
    users_roles ur ON ur.uid = u.uid
    AND u.created >= 1473897600
        JOIN
    role r ON r.rid = ur.rid
        LEFT JOIN
    profile p ON p.uid = u.uid
        LEFT JOIN
    field_data_field_registratie_leraarkaart rl ON rl.entity_id = p.pid
        LEFT JOIN
    field_data_field_leerjaar_ref lr ON lr.entity_id = p.pid
        LEFT JOIN
    taxonomy_term_data td ON td.tid = lr.field_leerjaar_ref_target_id
        LEFT JOIN
    field_data_field_registratie_scholen rs ON rs.entity_id = p.pid
        LEFT JOIN
    field_data_field_scholen fs ON fs.entity_id = p.pid
        LEFT JOIN
    node n ON n.nid = fs.field_scholen_target_id
        LEFT JOIN
    migrate_map_testbeeld_contentonderwijsinstellingen m ON m.destid1 = n.nid
WHERE
    ur.rid = '31' OR ur.rid = '51'
GROUP BY u.uid
order by u.created desc
LIMIT 10;]]></db:dynamic-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <logger message="Done /api/avo/users" level="INFO" doc:name="Done"/>
    </flow>
    

</mule>
