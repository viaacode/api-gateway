<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:objectstore="http://www.mulesoft.org/schema/mule/objectstore"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/objectstore http://www.mulesoft.org/schema/mule/objectstore/current/mule-objectstore.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">

 	<flow name="get:/user/{uid}:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="/user/{uid}" doc:name="HTTP"/>
        <set-variable variableName="uid" value="#[message.inboundProperties.'http.uri.params'.uid]" doc:name="var-uid"/>
        <flow-ref name="ref:getMilli" doc:name="ref:getMilli"/>
        <set-variable variableName="path" value="#[message.inboundProperties.'http.request.path']" doc:name="var path"/>
        <set-variable variableName="isPrivate" value="#[0]" doc:name="var isPrivate"/>
        <set-variable variableName="notPrivate" value="#[0]" doc:name="var notPrivate"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Get user information">
            <db:parameterized-query><![CDATA[SELECT 
    u.uid,
    p.pid,
    u.name naam,
    u.mail 'e-mail',
    u.status active,
    FROM_UNIXTIME(u.created) created,
    FROM_UNIXTIME(u.access) access,
    r.name rol,
    GROUP_CONCAT(rl.field_registratie_leraarkaart_value) lerarenkaart,
    GROUP_CONCAT(td.name
        SEPARATOR ', ') graad,
    GROUP_CONCAT(DISTINCT n.title
        SEPARATOR ', ') school,
    SUBSTRING_INDEX(m.sourceid1, '_', 1) vestigingsnummer
FROM
    users u
        LEFT JOIN
    users_roles ur ON ur.uid = u.uid
        JOIN
    role r ON r.rid = ur.rid
        LEFT JOIN
    profile p ON p.uid = u.uid
        LEFT JOIN
    field_data_field_registratie_leraarkaart rl ON rl.entity_id = p.pid
        LEFT JOIN
    field_data_field_leerjaar_ref lr ON lr.entity_id = p.pid
        LEFT JOIN
    taxonomy_term_data td ON td.tid = lr.field_leerjaar_ref_target_id
        LEFT JOIN
    field_data_field_registratie_scholen rs ON rs.entity_id = p.pid
        LEFT JOIN
    field_data_field_scholen fs ON fs.entity_id = p.pid
        LEFT JOIN
    node n ON n.nid = fs.field_scholen_target_id
        LEFT JOIN
    migrate_map_testbeeld_contentonderwijsinstellingen m ON m.destid1 = n.nid
WHERE
    u.uid = #[flowVars.uid]
GROUP BY u.uid
order by u.created desc]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="output">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
using ( info=payload[0]){
	"header": {
		"timestamp": flowVars['getMilli'],
		"path": flowVars['path'],
	    "description": "Gebuiker informatie",
	    "success":"All went well, and (usually) some data was returned.",
	    "sources": ["avo"]
	},
	"data": {(payload)}
}]]></dw:set-payload>
        </dw:transform-message>

        
        
    </flow>

    <flow name="get:/user/{uid}/active:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="/user/{uid}/active" allowedMethods="get" doc:name="HTTP"/>
        <set-variable variableName="uid" value="#[message.inboundProperties.'http.uri.params'.uid]" doc:name="var-uid"/>
        <flow-ref name="ref:getMilli" doc:name="ref:getMilli"/>
        <set-variable variableName="path" value="#[message.inboundProperties.'http.request.path']" doc:name="var path"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select status, FROM_UNIXTIME(access) as last from users where uid = #[flowVars.uid]]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="output">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
using ( info=payload[0]){
	"header": {
		"timestamp": flowVars['getMilli'],
		"path": flowVars['path'],
	    "description": "Gerbuiker collection aantal",
	    "success":"All went well, and (usually) some data was returned.",
        "result_count": sizeOf payload,
	    "sources": ["avo"]
	},
	"data": 
	{"status":"active" when info.status == 1
	otherwise
	"non-active",
	"last-active":info.last
	}
}]]></dw:set-payload>
        </dw:transform-message>


    </flow>
    <flow name="get:/user/{uid}/collections:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="/user/{uid}/collections" allowedMethods="get" doc:name="HTTP"/>
        <set-variable variableName="uid" value="#[message.inboundProperties.'http.uri.params'.uid]" doc:name="var-uid"/>
        <flow-ref name="ref:getMilli" doc:name="ref:getMilli"/>
        <set-variable variableName="path" value="#[message.inboundProperties.'http.request.path']" doc:name="var path"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT asset_id collection_id, n.nid , ass.field_assets_asset_reference title, ass.field_assets_asset_reference_id video_asset,title col_title
FROM node n
JOIN mediamosa_collection_mapping mc ON n.nid = mc.nid
JOIN field_data_field_assets ass ON ass.entity_id = mc.nid
WHERE n.uid = #[flowVars.uid]
AND n.type = 'collectie']]></db:parameterized-query>

        </db:select>


        <dw:transform-message doc:name="output">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%var info = flowVars['info'] splitBy "|"
---
{
	"header": {
		"timestamp": flowVars['getMilli'],
		"path": flowVars['path'],
	    "description": "Gerbuiker collection aantal",
	    "success":"All went well, and (usually) some data was returned.",
        "result_count": sizeOf payload,
	    "sources": ["avo"]
	},
	"data": payload groupBy $.col_title
}]]></dw:set-payload>
        </dw:transform-message>


    </flow>


    <flow name="get:/user/{uid}/favorites:api-config">
        <http:listener config-ref="api-httpListenerConfig" path="/user/{uid}/favorites" doc:name="HTTP"/>
        <set-variable variableName="uid" value="#[message.inboundProperties.'http.uri.params'.uid]" doc:name="var-uid"/>
        <flow-ref name="ref:getMilli" doc:name="ref:getMilli"/>
        <set-variable variableName="path" value="#[message.inboundProperties.'http.request.path']" doc:name="var path"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select asset_id collection_id, n.nid , ass.field_assets_asset_reference title, title col_title from node n
join mediamosa_collection_mapping mc on n.nid = mc.nid
join field_data_field_assets ass on ass.entity_id = mc.nid
where n.uid = #[flowVars.uid]
and n.type = 'collectie'
and n.title = 'favourite'
and n.status = 0]]></db:parameterized-query>

        </db:select>
        <dw:transform-message doc:name="output">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%var info = flowVars['info'] splitBy "|"
---
{
	"header": {
		"timestamp": flowVars['getMilli'],
		"path": flowVars['path'],
	    "description": "Gerbuiker collection aantal",
	    "success":"All went well, and (usually) some data was returned.",
        "result_count": sizeOf payload,
	    "sources": ["avo"]
	},
	"data": payload groupBy $.col_title
}]]></dw:set-payload>
        </dw:transform-message>


    </flow>

</mule>