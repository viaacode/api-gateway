<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd">
    <quartz:connector name="MatViewQuartz" validateConnections="true" doc:name="Quartz"/>

<flow name="db:/report/ams-registered-all-time">
        <expression-component doc:name="Add AMS as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("AMS")) {
	flowVars.sources.add("AMS");
}]]></expression-component>
        <db:select config-ref="Reporting" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT *
FROM report_ams_registered_all_time
WHERE noid_id LIKE #[flowVars.cp_ldap]
ORDER BY x ASC;]]></db:parameterized-query>
        </db:select>
    </flow>
    <flow name="db:/report/ams-registered-last-year">
        <expression-component doc:name="Add AMS as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("AMS")) {
	flowVars.sources.add("AMS");
}]]></expression-component>
        <db:select config-ref="Reporting" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT *
FROM report_ams_registered_last_year
WHERE noid_id LIKE #[flowVars.cp_ldap]
ORDER BY x ASC;]]></db:parameterized-query>
        </db:select>
    </flow>
    
    <flow name="db:/report/ams-registered-last-month">
        <expression-component doc:name="Add AMS as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("AMS")) {
	flowVars.sources.add("AMS");
}]]></expression-component>
        <db:select config-ref="Reporting" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT *
FROM report_ams_registered_last_month
WHERE noid_id LIKE #[flowVars.cp_ldap]
ORDER BY x ASC;]]></db:parameterized-query>
        </db:select>
    </flow>
    
    <flow name="db:/report/ams-registered-last-week">
        <expression-component doc:name="Add AMS as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("AMS")) {
	flowVars.sources.add("AMS");
}]]></expression-component>
        <db:select config-ref="Reporting" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT *
FROM report_ams_registered_last_week
WHERE noid_id LIKE #[flowVars.cp_ldap]
ORDER BY x ASC;]]></db:parameterized-query>
        </db:select>
    </flow>
    
    <flow name="db:/report/global/ams/registered">
        <expression-component doc:name="Add AMS as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("AMS")) {
	flowVars.sources.add("AMS");
}]]></expression-component>
        <choice doc:name="When cp_mam == '%'">
            <when expression="#[flowVars.cp_mam == '%']">
                <db:select config-ref="Reporting" doc:name="Database">
                    <db:parameterized-query><![CDATA[select sum(total_registered) total_registered, sum(audio_registered) audio_registered, sum(video_registered) video_registered, sum(paper_registered) paper_registered, sum(film_registered) film_registered
from report_ams_registered_global;]]></db:parameterized-query>
                </db:select>
            </when>
            <otherwise>
                <db:select config-ref="Reporting" doc:name="Database">
                    <db:parameterized-query><![CDATA[select *
from report_ams_registered_global
WHERE noid_id LIKE #[flowVars.cp_ldap];]]></db:parameterized-query>
                </db:select>
            </otherwise>
        </choice>
    </flow>
    
        <flow name="db:/report/global/ams/digitized">
        <expression-component doc:name="Add AMS as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("AMS")) {
	flowVars.sources.add("AMS");
}]]></expression-component>
        <choice doc:name="When cp_mam == '%'">
            <when expression="#[flowVars.cp_mam == '%']">
                <db:select config-ref="Reporting" doc:name="Database">
                    <db:parameterized-query><![CDATA[select sum(audio_registered_and_not_digitised) audio_registered_and_not_digitised, 
sum(video_registered_and_not_digitised) video_registered_and_not_digitised,
sum(film_registered_and_not_digitised) film_registered_and_not_digitised, 
sum(audio_digitised_ok) audio_digitised_ok, 
sum(audio_digitised_nok) audio_digitised_nok, 
sum(video_digitised_ok) video_digitised_ok,
sum(video_digitised_nok) video_digitised_nok,
sum(film_digitised_ok) film_digitised_ok, 
sum(film_digitised_nok) film_digitised_nok, 
sum(paper_digitised_ok) paper_digitised_ok,
sum(paper_digitised_nok) paper_digitised_nok
from report_ams_digitised_global;]]></db:parameterized-query>
                </db:select>
            </when>
            <otherwise>
                <db:select config-ref="Reporting" doc:name="Database">
                    <db:parameterized-query><![CDATA[select *
from report_ams_digitised_global
WHERE noid_id LIKE #[flowVars.cp_ldap];]]></db:parameterized-query>
                </db:select>
            </otherwise>
        </choice>
    </flow>
    
    <flow name="db:/report/mam">
        <expression-component doc:name="Add MAM as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("MAM")) {
	flowVars.sources.add("MAM");
}]]></expression-component>
        <choice doc:name="When cp_mam == '%'">
            <when expression="#[flowVars.cp_mam == '%']">
                <db:select config-ref="Reporting" doc:name="Database">
                    <db:parameterized-query><![CDATA[select x, sum(bytes) bytes, sum(items) items
from report_mam
group by x
order by x asc]]></db:parameterized-query>
                </db:select>
            </when>
            <otherwise>
                <db:select config-ref="Reporting" doc:name="Database">
                    <db:parameterized-query><![CDATA[select *
from report_mam
where organisation = #[flowVars.cp_mam]
order by x asc]]></db:parameterized-query>
                </db:select>
            </otherwise>
        </choice>
    </flow>
    
        <flow name="db:/report/global/mam">
        <expression-component doc:name="Add MAM as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("MAM")) {
	flowVars.sources.add("MAM");
}]]></expression-component>
        <choice doc:name="When cp_mam == '%'">
            <when expression="#[flowVars.cp_mam == '%']">
                <db:select config-ref="Reporting" doc:name="Database">
                    <db:parameterized-query><![CDATA[select mime_type, sum(archived_amount_ok) archived_amount_ok, sum(archived_amount_nok) archived_amount_nok, sum(archived_bytes_ok) archived_bytes_ok, sum(archived_bytes_nok) archived_bytes_nok
from report_mam_global
group by mime_type]]></db:parameterized-query>
                </db:select>
            </when>
            <otherwise>
                <db:select config-ref="Mediahaven_monitoring" doc:name="Database">
                    <db:parameterized-query><![CDATA[select *
from report_mam_global
where organisation = #[flowVars.cp_mam]]]></db:parameterized-query>
                </db:select>
            </otherwise>
        </choice>
    </flow>
    
    <flow name="db:/report/mam-created">
        <expression-component doc:name="Add MAM as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("MAM")) {
	flowVars.sources.add("MAM");
}]]></expression-component>
        <choice doc:name="When cp_mam == '%'">
            <when expression="#[flowVars.cp_mam == '%']">
                <db:select config-ref="Reporting" doc:name="Database">
                    <db:parameterized-query><![CDATA[select x, sum(bytes) bytes, sum(items) items
from report_mam
where date >= #[flowVars.start]
group by x
order by x asc]]></db:parameterized-query>
                </db:select>
            </when>
            <otherwise>
                <db:select config-ref="Reporting" doc:name="Database">
                    <db:parameterized-query><![CDATA[select *
from report_mam
where organisation = #[flowVars.cp_mam] 
		AND date >= #[flowVars.start]
order by x asc]]></db:parameterized-query>
                </db:select>
            </otherwise>
        </choice>
    </flow>
    <flow name="reportFlow">
        <quartz:inbound-endpoint jobName="matviews" repeatInterval="3600000" startDelay="100" connector-ref="MatViewQuartz" responseTimeout="10000" doc:name="Reload materialized views">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <logger message="Start reload materialized view mam" level="INFO" doc:name="Start reload materialized view mam"/>
        <db:execute-ddl config-ref="Reporting" doc:name="Refresh materialized views for MAM">
            <db:dynamic-query><![CDATA[REFRESH MATERIALIZED VIEW CONCURRENTLY report_mam;]]></db:dynamic-query>
        </db:execute-ddl>
        <logger message="End reload mam" level="INFO" doc:name="End reload mam"/>
        <logger message="Start reload mam global stats" level="INFO" doc:name="Start reload mam global stats"/>
        <db:execute-ddl config-ref="Reporting" doc:name="Refresh materialized views for MAM global stats">
            <db:dynamic-query><![CDATA[REFRESH MATERIALIZED VIEW CONCURRENTLY report_mam_global;]]></db:dynamic-query>
        </db:execute-ddl>
        <logger message="End reload mam global stats" level="INFO" doc:name="End reload mam global stats"/>
    </flow>

</mule>
