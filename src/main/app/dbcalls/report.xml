<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd">
    <quartz:connector name="MatViewQuartz" validateConnections="true" doc:name="Quartz"/>

<flow name="db:/report/ams">
        <expression-component doc:name="Add AMS as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("AMS")) {
	flowVars.sources.add("AMS");
}]]></expression-component>
        <db:select config-ref="AMS_MySQL" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT EXTRACT(year_month from created_on), UNIX_TIMESTAMP(MIN(created_on)) x, COUNT(1) total_registered, SUM(CASE WHEN carrier_type_id = 1 THEN 1 ELSE 0 END) audio_registered, SUM(CASE WHEN carrier_type_id = 2 THEN 1 ELSE 0 END) video_registered, SUM(CASE WHEN carrier_type_id = 3 THEN 1 ELSE 0 END) paper_registered, SUM(CASE WHEN carrier_type_id = 4 THEN 1 ELSE 0 END) film_registered
FROM ${ams.db.carrier}
WHERE organization_id IN (SELECT id FROM ${ams.db.organizations} WHERE noid_id LIKE #[flowVars.cp_ldap])
GROUP BY EXTRACT(year_month from created_on)
ORDER BY MIN(created_on) ASC;]]></db:parameterized-query>
        </db:select>
    </flow>
    <flow name="db:/report/ams-created">
        <expression-component doc:name="Add AMS as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("AMS")) {
	flowVars.sources.add("AMS");
}]]></expression-component>
        <db:select config-ref="AMS_MySQL" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT EXTRACT(year_month from created_on), UNIX_TIMESTAMP(MIN(created_on)) x, COUNT(1) total_registered, SUM(CASE WHEN carrier_type_id = 1 THEN 1 ELSE 0 END) audio_registered, SUM(CASE WHEN carrier_type_id = 2 THEN 1 ELSE 0 END) video_registered, SUM(CASE WHEN carrier_type_id = 3 THEN 1 ELSE 0 END) paper_registered, SUM(CASE WHEN carrier_type_id = 4 THEN 1 ELSE 0 END) film_registered
FROM ${ams.db.carrier}
WHERE organization_id IN (SELECT id FROM ${ams.db.organizations} WHERE noid_id LIKE(#[flowVars.cp_ldap]))
AND created_on >= #[flowVars.start]
GROUP BY EXTRACT(year_month from created_on)
ORDER BY MIN(created_on) ASC;]]></db:parameterized-query>
        </db:select>
    </flow>
    
    <flow name="db:/report/global/ams/registered">
        <expression-component doc:name="Add AMS as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("AMS")) {
	flowVars.sources.add("AMS");
}]]></expression-component>
        <db:select config-ref="AMS_MySQL" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT count(1) total_registered, sum(case when carrier_type_id = 1 then 1 else 0 end) audio_registered, sum(case when carrier_type_id = 2 then 1 else 0 end) video_registered, sum(case when carrier_type_id = 3 then 1 else 0 end) paper_registered, sum(case when carrier_type_id = 4 then 1 else 0 end) film_registered
FROM ${ams.db.carrier}
WHERE organization_id IN (SELECT id FROM ${ams.db.organizations} WHERE noid_id LIKE(#[flowVars.cp_ldap]));]]></db:parameterized-query>
        </db:select>
    </flow>
    
        <flow name="db:/report/global/ams/digitized">
        <expression-component doc:name="Add AMS as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("AMS")) {
	flowVars.sources.add("AMS");
}]]></expression-component>
        <db:select config-ref="AMS_MySQL" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT sum(case when (c.is_digitized = 0 and e.event_outcome is null) and c.carrier_type_id = 1 then 1 else 0 end) audio_registered_and_not_digitised, sum(case when (c.is_digitized = 0 and e.event_outcome is null) and c.carrier_type_id = 2 then 1 else 0 end) video_registered_and_not_digitised, sum(case when (c.is_digitized = 0 and e.event_outcome is null) and c.carrier_type_id = 4 then 1 else 0 end) film_registered_and_not_digitised, sum(case when e.event_outcome = 1 and c.carrier_type_id = 1 then 1 else 0 end) audio_digitised_ok, sum(case when e.event_outcome = 0 and c.carrier_type_id = 1 then 1 else 0 end) audio_digitised_nok, sum(case when e.event_outcome = 1 and c.carrier_type_id = 2 then 1 else 0 end) video_digitised_ok, sum(case when e.event_outcome = 0 and c.carrier_type_id = 2 then 1 else 0 end) video_digitised_nok, sum(case when e.event_outcome = 1 and c.carrier_type_id = 4 then 1 else 0 end) film_digitised_ok, sum(case when e.event_outcome = 0 and c.carrier_type_id = 4 then 1 else 0 end) film_digitised_nok
FROM ams.carrier c
LEFT JOIN ams.events e ON c.id = e.carrier_id and e.id = (
    SELECT max(id)
    FROM ams.events x
    WHERE x.carrier_id = c.id
    AND event_lookup_id = 5)
WHERE carrier_id IN (
    SELECT id
    FROM ${ams.db.carrier}
    WHERE organization_id IN (SELECT id FROM ${ams.db.organizations} WHERE noid_id LIKE(#[flowVars.cp_ldap]))
);]]></db:parameterized-query>
        </db:select>
    </flow>
    
        <flow name="db:/report/global/ams/digitized_paper">
        <expression-component doc:name="Add AMS as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("AMS")) {
	flowVars.sources.add("AMS");
}]]></expression-component>
        <db:select config-ref="AMS_MySQL" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT sum(case when e.event_outcome = 1 then 1 else 0 end) paper_digitised_ok, sum(case when e.event_outcome = 0 then 1 else 0 end) paper_digitised_nok
FROM ${ams.db.paper_event} e
WHERE event_lookup_id = 5
AND carrier_id IN (
    select id
    from ${ams.db.carrier}
    where organization_id IN (SELECT id FROM ${ams.db.organizations} WHERE noid_id LIKE(#[flowVars.cp_ldap])) )]]></db:parameterized-query>
        </db:select>
    </flow>
    
        <flow name="db:/report/global/ams/status">
        <expression-component doc:name="Add AMS as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("AMS")) {
	flowVars.sources.add("AMS");
}]]></expression-component>
        <db:select config-ref="AMS_MySQL" doc:name="Database">
            <db:parameterized-query><![CDATA[select sum(case when e.event_outcome = 1 then 1 else 0 end) paper_digitised_ok, sum(case when e.event_outcome = 0 then 1 else 0 end) paper_digitised_nok
FROM ${ams.db.paper_event} e
WHERE event_lookup_id = 5
AND carrier_id IN ( select id from ${ams.db.carrier} where organization_id IN (SELECT id FROM ${ams.db.organizations} WHERE noid_id LIKE(#[flowVars.cp_ldap])) )]]></db:parameterized-query>
        </db:select>
    </flow>
    
    <flow name="db:/report/mam">
        <expression-component doc:name="Add MAM as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("MAM")) {
	flowVars.sources.add("MAM");
}]]></expression-component>
        <choice doc:name="When cp_mam == '%'">
            <when expression="#[flowVars.cp_mam == '%']">
                <db:select config-ref="Reporting" doc:name="Database">
                    <db:parameterized-query><![CDATA[select x, sum(bytes) bytes, sum(items) items
from report_mam
group by x
order by x asc]]></db:parameterized-query>
                </db:select>
            </when>
            <otherwise>
                <db:select config-ref="Reporting" doc:name="Database">
                    <db:parameterized-query><![CDATA[select *
from report_mam
where organisation = #[flowVars.cp_mam]
order by x asc]]></db:parameterized-query>
                </db:select>
            </otherwise>
        </choice>
    </flow>
    
        <flow name="db:/report/global/mam">
        <expression-component doc:name="Add MAM as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("MAM")) {
	flowVars.sources.add("MAM");
}]]></expression-component>
        <choice doc:name="When cp_mam == '%'">
            <when expression="#[flowVars.cp_mam == '%']">
                <db:select config-ref="Reporting" doc:name="Database">
                    <db:parameterized-query><![CDATA[select mime_type, sum(archived_amount_ok) archived_amount_ok, sum(archived_amount_nok) archived_amount_nok, sum(archived_bytes_ok) archived_bytes_ok, sum(archived_bytes_nok) archived_bytes_nok
from report_mam_global
group by mime_type]]></db:parameterized-query>
                </db:select>
            </when>
            <otherwise>
                <db:select config-ref="Mediahaven_monitoring" doc:name="Database">
                    <db:parameterized-query><![CDATA[select *
from report_mam_global
where organisation = #[flowVars.cp_mam]]]></db:parameterized-query>
                </db:select>
            </otherwise>
        </choice>
    </flow>
    
    <flow name="db:/report/mam-created">
        <expression-component doc:name="Add MAM as source"><![CDATA[if (flowVars.sources == null) {
	flowVars.sources = new java.util.ArrayList();
}

if (!flowVars.sources.contains("MAM")) {
	flowVars.sources.add("MAM");
}]]></expression-component>
        <choice doc:name="When cp_mam == '%'">
            <when expression="#[flowVars.cp_mam == '%']">
                <db:select config-ref="Reporting" doc:name="Database">
                    <db:parameterized-query><![CDATA[select x, sum(bytes) bytes, sum(items) items
from report_mam
where date >= #[flowVars.start]
group by x
order by x asc]]></db:parameterized-query>
                </db:select>
            </when>
            <otherwise>
                <db:select config-ref="Reporting" doc:name="Database">
                    <db:parameterized-query><![CDATA[select *
from report_mam
where organisation = #[flowVars.cp_mam] 
		AND date >= #[flowVars.start]
order by x asc]]></db:parameterized-query>
                </db:select>
            </otherwise>
        </choice>
    </flow>
    <flow name="reportFlow">
        <quartz:inbound-endpoint jobName="matviews" repeatInterval="3600000" startDelay="100" connector-ref="MatViewQuartz" responseTimeout="10000" doc:name="Reload materialized views">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <logger message="Start reload materialized view mam" level="INFO" doc:name="Start reload materialized view mam"/>
        <db:execute-ddl config-ref="Reporting" doc:name="Refresh materialized views for MAM">
            <db:dynamic-query><![CDATA[REFRESH MATERIALIZED VIEW CONCURRENTLY report_mam;]]></db:dynamic-query>
        </db:execute-ddl>
        <logger message="End reload mam" level="INFO" doc:name="End reload mam"/>
        <logger message="Start reload mam global stats" level="INFO" doc:name="Start reload mam global stats"/>
        <db:execute-ddl config-ref="Reporting" doc:name="Refresh materialized views for MAM global stats">
            <db:dynamic-query><![CDATA[REFRESH MATERIALIZED VIEW CONCURRENTLY report_mam_global;]]></db:dynamic-query>
        </db:execute-ddl>
        <logger message="End reload mam global stats" level="INFO" doc:name="End reload mam global stats"/>
    </flow>

</mule>
