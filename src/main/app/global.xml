<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:oauth2="http://www.mulesoft.org/schema/mule/oauth2" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:objectstore="http://www.mulesoft.org/schema/mule/objectstore"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/objectstore http://www.mulesoft.org/schema/mule/objectstore/current/mule-objectstore.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/oauth2 http://www.mulesoft.org/schema/mule/oauth2/current/mule-oauth2.xsd">
    
    
    
    <!-- ##### PROPERTY PLACEHOLDER ##### -->
   	<context:property-placeholder location="${mule.env}.properties"/>
    
    <!-- ##### HTTP Connectors ##### -->
    <http:request-config name="HTTP_MM_Request" protocol="HTTPS" host="${mm.link}" port="443" basePath="/" doc:name="HTTP Request Configuration"/>
    <http:request-config name="Slack" protocol="HTTPS" host="${slack.host}" port="${slack.port}" basePath="${slack.baseurl}" doc:name="HTTP Request Configuration">
    	<http:proxy host="${proxy.host}" port="${proxy.port}"/>
    </http:request-config>
    <http:request-config name="HTTP_Request_Configuration" protocol="HTTPS" host="analyticsreporting.googleapis.com" port="443" basePath="/v4" doc:name="HTTP Request Configuration">
    	<oauth2:authorization-code-grant-type clientId="${ggl.clientid}" clientSecret="${ggl.secret}" redirectionUrl="http://localhost:10007/callback" tokenManager-ref="Token_Manager_Config">
            <oauth2:authorization-request authorizationUrl="https://accounts.google.com/o/oauth2/v2/auth" localAuthorizationUrl="http://localhost:10007/login" scopes="https://www.googleapis.com/auth/analytics">
                <oauth2:custom-parameters>
                    <oauth2:custom-parameter paramName="access_type" value="offline"/>
                    <oauth2:custom-parameter paramName="login_hint" value="jonas.vanreeth@bewire.be"/>
                </oauth2:custom-parameters>
            </oauth2:authorization-request>
            <oauth2:token-request tokenUrl="https://www.googleapis.com/oauth2/v4/token">
                <oauth2:token-response accessToken="#[json:access_token]" expiresIn="#[json:expires_in]" refreshToken="#[json:refresh_token]">
                    <oauth2:custom-parameter-extractor paramName="token_type" value="#[json:token_type]"/>
                </oauth2:token-response>
            </oauth2:token-request>
        </oauth2:authorization-code-grant-type>        
   </http:request-config>
   
	<!-- ##### DB Connectors ##### -->
    <db:mysql-config name="MySQL_Configuration" host="${avo.host}" port="3306" user="${avo.user}" password="${avo.password}" database="${avo.database}" doc:name="MySQL Configuration">
    	<reconnect-forever/>
    </db:mysql-config>
    <db:mysql-config name="AMS_MySQL" host="${ams.db.host}" port="${ams.db.port}" user="${ams.db.username}" password="${ams.db.password}" database="${ams.db.database}" doc:name="MySQL Configuration">
        <reconnect-forever/>
    </db:mysql-config>
   	<db:generic-config name="Mediahaven_monitoring" url="jdbc:postgresql://${mam.db.host}:${mam.db.port}/${mam.db.database}?password=${mam.db.password}&amp;user=${mam.db.username}" driverClassName="org.postgresql.Driver" doc:name="MH monitoring DB"> 
        <reconnect-forever></reconnect-forever>  
    </db:generic-config>
    <db:generic-config name="Borndigital" url="jdbc:postgresql://${borndigital.db.host}:${borndigital.db.port}/${borndigital.db.database}?password=${borndigital.db.password}&amp;user=${borndigital.db.username}" driverClassName="org.postgresql.Driver" doc:name="Borndigital DB"> 
        <reconnect-forever></reconnect-forever>  
    </db:generic-config>
    
    <!-- ##### OBJECTSTORE Configs ##### -->
    <objectstore:config name="cookiestore" doc:name="ObjectStore: Connector" entryTtl="1000000000" expirationInterval="30000" maxEntries="500" partition="cookiemonster" persistent="true"/>
	<ee:object-store-caching-strategy name="Caching_AMS" keyGenerationExpression="#[flowVars.cp_ldap+'_ams'+'_'+flowVars.granularity]" doc:name="Caching Strategy">
        <in-memory-store name="ams" maxEntries="1000" entryTTL="-1" expirationInterval="600000"/>
    </ee:object-store-caching-strategy>
    <ee:object-store-caching-strategy name="Caching_AvO_Users_count" keyGenerationExpression="#[flowVars.'timerange-clausule']" doc:name="Caching Strategy">
        <managed-store storeName="avo_users_count" maxEntries="1" entryTTL="-1" expirationInterval="600000"/>
    </ee:object-store-caching-strategy>
    <http:request-config name="ldap2mam_http" host="${ldap2mam.host}" port="${ldap2mam.port}" basePath="/" responseTimeout="30000" doc:name="HTTP Request Configuration" protocol="HTTP"/>
	<ee:object-store-caching-strategy name="Caching_MAM" keyGenerationExpression="#[flowVars.cp_ldap+'_mam'+'_'+flowVars.granularity]" doc:name="Caching Strategy">
		<in-memory-store name="mam" maxEntries="1000" entryTTL="-1" expirationInterval="600000"/>
	</ee:object-store-caching-strategy>
	<ee:object-store-caching-strategy name="Caching_global" keyGenerationExpression="#[flowVars.cp_ldap+'_global']" doc:name="Caching Strategy">
        <in-memory-store name="global" maxEntries="1000" entryTTL="-1" expirationInterval="600000"/>
    </ee:object-store-caching-strategy>
    
    <!-- ##### OAUTH ##### -->
    <oauth2:token-manager-config name="Token_Manager_Config"  doc:name="Token Manager Config" />
    <!-- ##### SMTP ##### -->
    <smtp:gmail-connector name="gmailconfig" doc:name="Gmail"/>

</mule>